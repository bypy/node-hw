<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="e9a0a87c-7b28-4adb-94cf-aaf9e3ceb68a" activeEnvironment="Default" name="Voting" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="dbbd0d25-576a-4fd0-a21b-171709c28533" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://WS-1168FL:8089/</con:endpoint><con:endpoint>http://localhost</con:endpoint></con:endpoints><con:resource name="variants" path="/variants" id="9d2a28d3-2c88-43af-a88c-71b532e27c11"><con:settings/><con:parameters/><con:method name="Variants" id="66957f2c-8f27-45e2-8d1e-3880029f1baf" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>app;ication/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="f52727f2-ea6b-4f58-94c7-6662c27fd566" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://WS-1168FL:8089/</con:endpoint><con:request/><con:originalUri>http://localhost/variants</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService id="50796541-2e5f-4b25-86e9-b643d7d37cbf" port="8089" path="/" host="WS-1168FL" name="REST MockService 2"><con:settings/><con:properties/><con:restMockAction name="/variants" method="GET" resourcePath="/variants" id="a9789233-2565-437f-b1da-aca094d67036"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="de369aa8-d385-402e-b841-9483a68b7cb1" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[
  {
    "code": "1",
    "text": "Песчаный карьер"
  },
  {
  	"code": "2",
    "text": "Уборка улиц"
  },
  {
  	"code": "3",
    "text": "Мясокомбинат"
  },
  {
  	"code": "4",
    "text": "Строительство жилого дома"
  }
]</con:responseContent><con:header><con:name>Access-Control-Allow-Origin:</con:name><con:value>*</con:value></con:header><con:header><con:name>Content-Type</con:name><con:value>application/json; charset=UTF-8</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/></con:soapui-project>